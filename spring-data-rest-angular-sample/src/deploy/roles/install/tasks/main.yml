- hosts: local
  connection: local
  sudo: yes

  tasks:
   - block:
     - name: create a unique mysql container name
       set_fact:
        mysql_container_name: mysql_test_{{lookup('pipe', 'date "+%Y%m%d%H%M%S"')}}
        tomcat_container_name: tomcat_test_{{lookup('pipe', 'date "+%Y%m%d%H%M%S"')}}

     - name: Run mysql container
       docker: 
        docker_url: "tcp://139.196.19.48:8888"
        image: mysql:5.6
        name: "{{ mysql_container_name }}"
        publish_all_ports: yes
        env: 
           MYSQL_ROOT_PASSWORD: my-secret-pw
           MYSQL_DATABASE: taskmanager
           MYSQL_USER: taskuser
           MYSQL_PASSWORD: taskpass
        state: started
       register: mysql_result

     - name: add mysql host to inventory
       add_host:
          name: "{{ mysql_container_name }}"
          ansible_connection: docker 

     - name: install python 
       delegate_to: "{{ mysql_container_name }}"
       raw: apt-get update && apt-get -y install python-simplejson

     - name: Check  mysql Server Start 
       delegate_to: "{{ mysql_container_name }}"
       wait_for: host=127.0.0.1 port=3306 delay=10 state=drained

     - name: Copy Dump to Tmp dir
       delegate_to: "{{ mysql_container_name }}"
       copy: src="files/dump.sql" dest=/tmp/dump.sql

     - name: Run import dump 
       delegate_to: "{{ mysql_container_name }}"
       shell: mysql -utaskuser -ptaskpass < /tmp/dump.sql
       register: mysql_import_result

     - name: Run tomcat container
       docker: 
        docker_url: "tcp://139.196.19.48:8888"
        image: tomcat:7-jre8
        name: "{{ tomcat_container_name }}"
        publish_all_ports: yes
        state: started 
        links: 
        - "{{ mysql_container_name }}:mysql"
       register: tomcast_result 

     - name: add tomcat host to inventory
       add_host:
          name: "{{ tomcat_container_name }}"
          ansible_connection: docker 
     
     - name: install python 
       delegate_to: "{{ tomcat_container_name }}"
       raw: apt-get update && apt-get -y install python-simplejson 

     - name: Check  tomcat Server Start 
       delegate_to: "{{ tomcat_container_name }}"
       wait_for: host=127.0.0.1 port=8080 delay=10 state=drained

     - name: Copy war to tomcat dir
       delegate_to: "{{ tomcat_container_name }}"
       copy: src="target/spring-data-rest-angular.war"  dest="/usr/local/tomcat/webapps/"

     rescue:
     #- debug: msg='I caught an error'
     #- command: /bin/false
     - fail: msg="The system caught an error :{{ mysql_import_result.stderr }}"

     always:

     - name: Get Tomcat Container Node Name
       command:  docker -H 139.196.19.48:8888 inspect --format=\{\{' .Node.Name '\}\} {{ tomcat_container_name }}
       register: tomcat_node_name 

     - name: obsolete tomcat container
       docker:
        docker_url: "tcp://139.196.19.48:8888"
        name: "{{ tomcat_node_name.stdout }}/{{ tomcat_container_name }}"
        image: tomcat:7-jre8
        state: absent 

     - name: Get Mysql Container Node Name
       command:  docker -H 139.196.19.48:8888 inspect --format=\{\{' .Node.Name '\}\} {{ mysql_container_name }}
       register: mysql_node_name 

     - name: obsolete mysql container
       docker:
        docker_url: "tcp://139.196.19.48:8888"
        name: "{{ mysql_node_name.stdout }}/{{ mysql_container_name }}"
        image: mysql:5.6
        state: absent
